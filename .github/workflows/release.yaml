name: Create release on push to master

on:
  push:
    branches:
      - fixes

jobs:
  create_release:
    name: Create Release
    runs-on: [ ubuntu-latest ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1

      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          pip install -e .

      - name: Output Release URL File
        run: echo "example.com" > release_url.txt

      - name: Save Release URL File for publish
        uses: actions/upload-artifact@v4
        with:
          name: release_url
          path: release_url.txt

  build:
    name: Build packages
    needs: create_release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            TARGET: windows
            CMD_BUILD: |
              pyinstaller aas_manager.spec
              xcopy /E /I basyx dist\AAS_Manager\basyx
              cd dist
              7z a AAS_Manager_Win.zip AAS_Manager
            OUT_FILE_NAME: AAS_Manager_Win.zip
            ASSET_MIME: application/vnd.microsoft.portable-executable
    steps:
      - uses: actions/checkout@v1

      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          pip install -e .

      - name: Build with pyinstaller for ${{matrix.TARGET}}
        run: ${{matrix.CMD_BUILD}}

      - name: Load Release URL File from release job
        uses: actions/download-artifact@v4
        with:
          name: release_url

      - name: List artifact contents
        run: ls -R

      - name: Get Release File Name & Upload URL
        id: get_release_info
        shell: bash
        run: |
          upload_url=$(cat release_url/release_url.txt)
          echo "Upload URL: $upload_url"
          echo ::set-output name=upload_url::$value

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: ./dist/${{ matrix.OUT_FILE_NAME}}
          asset_name: ${{ matrix.OUT_FILE_NAME}}
          asset_content_type: ${{ matrix.ASSET_MIME}}